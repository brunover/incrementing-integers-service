{"version":3,"sources":["components/NoMatch/NoMatch.jsx","utils/react-auth0-spa.js","components/Routes/Routes.jsx","components/NavBar/NavBar.jsx","components/Header/Header.jsx","utils/utils.js","utils/api.js","components/Dashboard/Dashboard.jsx","components/Loader/Loader.jsx","components/App/App.jsx","serviceWorker.js","index.js"],"names":["NoMatch","className","Body","type","window","location","href","Component","DEFAULT_REDIRECT_CALLBACK","history","replaceState","document","title","pathname","Auth0Context","React","createContext","useAuth0","useContext","Routes","exact","from","to","path","component","Dashboard","NavBar","isAuthenticated","loginWithRedirect","Header","logout","this","context","user","props","logo","alt","src","productTitle","profile","glyph","colorAccent","initials","userName","email","profileMenu","callback","name","size","contextType","qs","require","serializeObj","obj","stringify","axios","token","localStorage","protocol","hostname","api","create","baseURL","headers","Authorization","getUser","body","post","then","res","patchInteger","id","patch","getInteger","get","_isMounted","state","isLoadingUser","isLoadingInteger","error","success","fetchUser","authUser","data","safeSetState","catch","console","response","requestNewInteger","status","prevState","int_value","resetInteger","current","prompt","trim","isNaN","alert","Number","setState","newStateObj","warn","message","description","Actions","onClick","cols","Content","Loader","renderSpinner","sizeClass","toLowerCase","aria-hidden","aria-label","renderSynchronizer","animate","icon","display","defaultProps","App","loading","Boolean","match","ReactDOM","render","children","onRedirectCallback","initOptions","useState","setIsAuthenticated","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","initAuth0","loginWithPopup","params","Provider","value","getIdTokenClaims","getTokenSilently","getTokenWithPopup","domain","config","client_id","clientId","redirect_uri","origin","targetUrl","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2f9aae4.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Alert, Panel } from \"fundamental-react\"\r\n\r\n// NoMatch renders a 404 page when the path does not match any route\r\nexport default class NoMatch extends Component {\r\n  render() {\r\n    return (\r\n      <div className='fd-container fd-container--centered'>\r\n        <div className='fd-has-margin-bottom-medium'>\r\n          <Panel>\r\n            <Panel.Body>\r\n              <Alert type='warning'>\r\n                <h3>Page not found - 404</h3>\r\n                <p>{window.location.href}</p>\r\n              </Alert>\r\n            </Panel.Body>\r\n          </Panel>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\"\r\nimport createAuth0Client from \"@auth0/auth0-spa-js\"\r\n\r\nconst DEFAULT_REDIRECT_CALLBACK = () =>\r\n  window.history.replaceState({}, document.title, window.location.pathname)\r\n\r\nexport const Auth0Context = React.createContext()\r\nexport const useAuth0 = () => useContext(Auth0Context)\r\nexport const Auth0Provider = ({\r\n  children,\r\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\r\n  ...initOptions\r\n}) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState()\r\n  const [user, setUser] = useState()\r\n  const [auth0Client, setAuth0] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n  const [popupOpen, setPopupOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const initAuth0 = async () => {\r\n      const auth0FromHook = await createAuth0Client(initOptions)\r\n      setAuth0(auth0FromHook)\r\n\r\n      if (window.location.search.includes(\"code=\")) {\r\n        const { appState } = await auth0FromHook.handleRedirectCallback()\r\n        onRedirectCallback(appState)\r\n      }\r\n\r\n      const isAuthenticated = await auth0FromHook.isAuthenticated()\r\n\r\n      setIsAuthenticated(isAuthenticated)\r\n\r\n      if (isAuthenticated) {\r\n        const user = await auth0FromHook.getUser()\r\n        setUser(user)\r\n      }\r\n\r\n      setLoading(false)\r\n    }\r\n    initAuth0()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const loginWithPopup = async (params = {}) => {\r\n    setPopupOpen(true)\r\n    try {\r\n      await auth0Client.loginWithPopup(params)\r\n    } catch (error) {\r\n      console.error(error)\r\n    } finally {\r\n      setPopupOpen(false)\r\n    }\r\n    const user = await auth0Client.getUser()\r\n    setUser(user)\r\n    setIsAuthenticated(true)\r\n  }\r\n\r\n  const handleRedirectCallback = async () => {\r\n    setLoading(true)\r\n    await auth0Client.handleRedirectCallback()\r\n    const user = await auth0Client.getUser()\r\n    setLoading(false)\r\n    setIsAuthenticated(true)\r\n    setUser(user)\r\n  }\r\n  return (\r\n    <Auth0Context.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        loading,\r\n        popupOpen,\r\n        loginWithPopup,\r\n        handleRedirectCallback,\r\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\r\n        logout: (...p) => auth0Client.logout(...p)\r\n      }}>\r\n      {children}\r\n    </Auth0Context.Provider>\r\n  )\r\n}\r\n","import React, { Component } from \"react\"\r\nimport { Route, Switch, Redirect } from \"react-router-dom\"\r\nimport { Dashboard, NoMatch } from \"../components\"\r\n\r\nexport default class Routes extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Switch>\r\n          {/* Dashboard */}\r\n          <Redirect exact from='/' to='/dashboard' />\r\n          <Route path='/dashboard' component={Dashboard} />\r\n          {/* 'NoMatch' route should always be the last one (it acts as a 'default' case) */}\r\n          <Route path='' component={NoMatch} />\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { useAuth0 } from \"../../utils/react-auth0-spa\"\r\nimport Routes from \"../Routes/Routes\"\r\n\r\nconst NavBar = () => {\r\n  const { isAuthenticated, loginWithRedirect } = useAuth0()\r\n\r\n  return (\r\n    <div>\r\n      {!isAuthenticated && loginWithRedirect({})}\r\n\r\n      {isAuthenticated && <Routes />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import React, { Component } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Shellbar } from \"fundamental-react\"\r\nimport { Auth0Context } from \"../../utils/react-auth0-spa\"\r\n\r\n// Header contains the Shell bar component from Fiori Fundamentals\r\nexport default class Header extends Component {\r\n  // Assign Auth0 context to a static property\r\n  static contextType = Auth0Context\r\n\r\n  static propTypes = {\r\n    user: PropTypes.object.isRequired\r\n  }\r\n\r\n  render() {\r\n    const { logout } = this.context\r\n    const { user } = this.props\r\n\r\n    return (\r\n      <div className='fd-container'>\r\n        <Shellbar\r\n          logo={<img alt='Incrementing Integer Service' src='/logo.png' />}\r\n          productTitle='Incrementing Integer Service'\r\n          profile={{\r\n            glyph: \"settings\",\r\n            colorAccent: 4,\r\n            initials: \"...\",\r\n            userName: user.email || \"No user\"\r\n          }}\r\n          profileMenu={[\r\n            {\r\n              callback: () => {\r\n                logout()\r\n              },\r\n              glyph: \"log\",\r\n              name: \"Log Out\",\r\n              size: \"s\"\r\n            }\r\n          ]}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","const qs = require(\"querystring\")\r\n\r\n// Serialize a obj to make it valid for request POST\r\nexport const serializeObj = obj => qs.stringify(obj)\r\n\r\n// Case insensitive sort function for string values\r\nexport const sortByKey = (key = \"Name\", isDesc = false) => {\r\n  return isDesc\r\n    ? (a, b) => b[key].localeCompare(a[key])\r\n    : (a, b) => a[key].localeCompare(b[key])\r\n}\r\n\r\n// Sort function for Date values\r\nexport const sortByDate = (key = \"Started\", isDesc = false) => {\r\n  return isDesc\r\n    ? (a, b) => new Date(b[key]) - new Date(a[key])\r\n    : (a, b) => new Date(a[key]) - new Date(b[key])\r\n}\r\n","const axios = require(\"axios\")\r\n\r\n// Token will be provided by OAuth in the future\r\nlet token = localStorage.token\r\nif (!token) {\r\n  token = localStorage.token = \"1234567\"\r\n}\r\n\r\n// Axios instance configuration for the main api\r\nconst protocol = window.location.protocol\r\nconst hostname = window.location.hostname\r\nconst api = axios.create({\r\n  baseURL: `${protocol}//${hostname}/api/v1`,\r\n  headers: {\r\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    Authorization: `Bearer ${token}`\r\n  }\r\n})\r\n\r\n// -------------------------------------\r\n// USERS API\r\nexport const getUser = body => {\r\n  return api.post(`/users`, body).then(res => res)\r\n}\r\n\r\nexport const patchInteger = (id, body) => {\r\n  return api.patch(`/users/${id}/current`, body).then(res => res)\r\n}\r\n\r\nexport const getInteger = id => api.get(`/users/${id}/next`).then(res => res)\r\n","import React, { Component } from \"react\"\r\nimport { serializeObj } from \"../../utils/utils\"\r\nimport { getUser, getInteger, patchInteger } from \"../../utils/api\"\r\nimport { Header, Loader } from \"../components\"\r\nimport { Auth0Context } from \"../../utils/react-auth0-spa\"\r\nimport {\r\n  Panel,\r\n  PanelGrid,\r\n  Tile,\r\n  ActionBar,\r\n  Status,\r\n  Button\r\n} from \"fundamental-react\"\r\n\r\nexport default class Dashboard extends Component {\r\n  _isMounted = false\r\n\r\n  // Assign Auth0 context to a static property\r\n  static contextType = Auth0Context\r\n\r\n  state = {\r\n    isLoadingUser: true,\r\n    isLoadingInteger: false,\r\n    error: null,\r\n    success: null,\r\n    user: {}\r\n  }\r\n\r\n  safeSetState(newStateObj) {\r\n    if (this._isMounted) {\r\n      this.setState(newStateObj)\r\n    } else {\r\n      console.warn(\r\n        `State was not updated because component is unmounted`,\r\n        newStateObj\r\n      )\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true\r\n    const { user } = this.context\r\n    this.fetchUser(user)\r\n  }\r\n\r\n  fetchUser = authUser => {\r\n    const email = authUser.email\r\n    return getUser(serializeObj({ email }))\r\n      .then(res => {\r\n        const user = res.data || {}\r\n        this.safeSetState({ isLoadingUser: false, user })\r\n      })\r\n      .catch(error => {\r\n        console.error(error.response)\r\n        this.safeSetState({ isLoadingUser: false, error })\r\n      })\r\n  }\r\n\r\n  requestNewInteger = () => {\r\n    this.safeSetState({ isLoadingInteger: true })\r\n    getInteger(this.state.user.id || 0)\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          this.safeSetState(prevState => {\r\n            const user = prevState.user\r\n            user.int_value = res.data\r\n            return { isLoadingInteger: false, user }\r\n          })\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(error.response)\r\n        this.safeSetState({ isLoadingInteger: false, error })\r\n      })\r\n  }\r\n\r\n  resetInteger = () => {\r\n    let current = window.prompt(\r\n      \"Inform the new integer value (bigger than zero):\"\r\n    )\r\n    if (!current) return\r\n    current = current.trim()\r\n    if (isNaN(current)) {\r\n      alert(\"You must provide a number\")\r\n      return\r\n    }\r\n    current = Number(current)\r\n    if (current < 0) {\r\n      alert(\"You must provide a number bigger than zero\")\r\n      return\r\n    }\r\n    this.safeSetState({ isLoadingInteger: true })\r\n    patchInteger(this.state.user.id || 0, serializeObj({ current }))\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          this.safeSetState(prevState => {\r\n            const user = prevState.user\r\n            user.int_value = res.data\r\n            return { isLoadingInteger: false, user }\r\n          })\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(error.response)\r\n        this.setState({ isLoadingInteger: false, error })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { isLoadingUser, isLoadingInteger, error, user } = this.state\r\n\r\n    return (\r\n      <div className='fd-container fd-container--centered'>\r\n        <Header user={user} />\r\n        <div className='fd-container'>\r\n          <div className='fd-has-margin-bottom-medium'>\r\n            <div className='fd-container'>\r\n              <Panel>\r\n                <Panel.Body>\r\n                  {/* Display a message if we encounter an error */}\r\n                  {error && (\r\n                    <Status type='error' glyph='message-error'>\r\n                      {error.message}\r\n                    </Status>\r\n                  )}\r\n\r\n                  {/* General info section */}\r\n                  <ActionBar>\r\n                    <ActionBar.Header\r\n                      description='Request the next integer or reset the value of the current one'\r\n                      title='Your personal integer'\r\n                    />\r\n                    <ActionBar.Actions>\r\n                      <Button\r\n                        glyph='add'\r\n                        onClick={() => this.requestNewInteger()}>\r\n                        Request New Integer\r\n                      </Button>\r\n                      <Button\r\n                        glyph='refresh'\r\n                        onClick={() => this.resetInteger()}>\r\n                        Reset My Integer\r\n                      </Button>\r\n                    </ActionBar.Actions>\r\n                  </ActionBar>\r\n\r\n                  {/* Counters */}\r\n                  {isLoadingUser ? (\r\n                    // Loading data from api\r\n                    <Loader />\r\n                  ) : (\r\n                    // Data was fetched\r\n                    <PanelGrid cols={2}>\r\n                      <Panel>\r\n                        <Panel.Body>\r\n                          <Tile>\r\n                            <Tile.Content title='User info'>\r\n                              <br />\r\n                              <p>\r\n                                Email:{\" \"}\r\n                                <strong>{user.email || \"No Email\"}</strong>\r\n                              </p>\r\n                              <p>\r\n                                ID (use it to fetch your integer using \"curl\"):{\" \"}\r\n                                <strong>{user.id || \"No ID\"}</strong>\r\n                              </p>\r\n                              <p>Examples:</p>\r\n                              <ul>\r\n                                <li>\r\n                                  Fetch current integer:\r\n                                  <br />\r\n                                  <code>\r\n                                    curl http://localhost/api/v1/users/\r\n                                    {user.id || 0}/current\r\n                                  </code>\r\n                                </li>\r\n                                <li>\r\n                                  Fetch next integer:\r\n                                  <br />\r\n                                  <code>\r\n                                    curl http://localhost/api/v1/users/\r\n                                    {user.id || 0}/next\r\n                                  </code>\r\n                                </li>\r\n                                <li>\r\n                                  Reset your integer:\r\n                                  <br />\r\n                                  <code>\r\n                                    curl -X \"PATCH\"\r\n                                    http://localhost/api/v1/users/{user.id || 0}\r\n                                    /current --data \"current=1000\"\r\n                                  </code>\r\n                                </li>\r\n                              </ul>\r\n                            </Tile.Content>\r\n                          </Tile>\r\n                        </Panel.Body>\r\n                      </Panel>\r\n\r\n                      <Panel>\r\n                        <Panel.Body>\r\n                          <Tile>\r\n                            <Tile.Content title='Current Integer'>\r\n                              <br />\r\n                              <p className='fd-has-type-4'>\r\n                                {user.int_value || 0}\r\n                                {isLoadingInteger && (\r\n                                  <Loader size='s' type='synch' />\r\n                                )}\r\n                              </p>\r\n                            </Tile.Content>\r\n                          </Tile>\r\n                        </Panel.Body>\r\n                      </Panel>\r\n                    </PanelGrid>\r\n                  )}\r\n                </Panel.Body>\r\n              </Panel>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nexport default class Loader extends Component {\r\n  static propTypes = {\r\n    display: PropTypes.bool,\r\n    type: PropTypes.oneOf([\"spin\", \"synch\"]),\r\n    size: PropTypes.oneOf([\"s\", \"m\", \"l\"]),\r\n    animate: PropTypes.oneOf([\"spin\", \"pulse\"]),\r\n    icon: PropTypes.string\r\n  }\r\n\r\n  static defaultProps = {\r\n    display: true,\r\n    type: \"spin\",\r\n    size: \"m\",\r\n    animate: \"spin\",\r\n    icon: \"synchronize\"\r\n  }\r\n\r\n  renderSpinner = ({ size }) => {\r\n    let sizeClass = \"\"\r\n    if (size) {\r\n      switch (size.toLowerCase()) {\r\n        case \"s\": {\r\n          sizeClass = \"fd-loading-spinner--small\"\r\n          break\r\n        }\r\n        case \"l\": {\r\n          sizeClass = \"fd-loading-spinner--large\"\r\n          break\r\n        }\r\n        default: {\r\n          sizeClass = \"\"\r\n          break\r\n        }\r\n      }\r\n    }\r\n    return (\r\n      <div\r\n        className={`fd-loading-spinner ${sizeClass}`}\r\n        aria-hidden='false'\r\n        aria-label='Loading'></div>\r\n    )\r\n  }\r\n\r\n  renderSynchronizer = ({ size, animate, icon }) => {\r\n    return (\r\n      <span\r\n        className={`\r\n          fd-has-margin-x-tiny \r\n          sap-icon--${icon} \r\n          sap-icon--${size} \r\n          sap-icon--animate-${animate}\r\n        `}\r\n      />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { display, type } = this.props\r\n    // If received the display \"false\" props, does not render the loader\r\n    if (!display) return null\r\n    // Check which type to render\r\n    if (type.toLowerCase() === \"synch\") {\r\n      // Synchronizer type\r\n      return this.renderSynchronizer(this.props)\r\n    } else {\r\n      // Renders the default spinner if no type was passed via props\r\n      return this.renderSpinner(this.props)\r\n    }\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport \"../../styles/App.css\"\r\nimport { NavBar, Loader } from \"../components\"\r\nimport { useAuth0 } from \"../../utils/react-auth0-spa\"\r\n\r\nfunction App() {\r\n  const { loading } = useAuth0()\r\n\r\n  if (loading) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <div className='App'>\r\n      <header>\r\n        <NavBar />\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./components/App/App\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\nimport { BrowserRouter } from \"react-router-dom\"\r\nimport { Auth0Provider } from \"./utils/react-auth0-spa\"\r\nimport config from \"./utils/auth_config.json\"\r\n\r\n// A function that routes the user to the right place\r\n// after login\r\nconst onRedirectCallback = appState => {\r\n  window.history.replaceState(\r\n    {},\r\n    document.title,\r\n    appState && appState.targetUrl\r\n      ? appState.targetUrl\r\n      : window.location.pathname\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <Auth0Provider\r\n    domain={config.domain}\r\n    client_id={config.clientId}\r\n    redirect_uri={window.location.origin}\r\n    onRedirectCallback={onRedirectCallback}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Auth0Provider>,\r\n  document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}